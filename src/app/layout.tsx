import type { Metadata } from 'next';
import { Geist, Geist_Mono } from 'next/font/google';
import { ReactNode } from 'react';
import initTranslations from '@/utils/i18n';
import { TranslationsProvider } from '@/providers/TranslationProvider';
import BaseView from '@/components/base/view/BaseView';
import Header from '@/components/header/Header';
import { StyleProvider } from '@/providers/StyleProvider';
import './globals.css';
import StoreProvider from '@/providers/StoreProvider';

const geistSans = Geist({
  variable: '--font-geist-sans',
  subsets: ['latin'],
});

const geistMono = Geist_Mono({
  variable: '--font-geist-mono',
  subsets: ['latin'],
});

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

export default async function RootLayout(
  props: Readonly<{
    children: ReactNode;
    params: Promise<{ locale: string }>;
  }>,
) {
  const { params, children } = props;

  const { locale } = await params;
  const { resources } = await initTranslations({ locale });

  return (
    <html lang={locale} className={'relative w-full'}>
      <body className={`${geistSans.variable} ${geistMono.variable} h-screen w-full`}>
        <StyleProvider>
          <StoreProvider>
            <TranslationsProvider locale={locale} resources={resources}>
              <BaseView className={'h-full w-full flex-col bg-white'}>
                <Header />
                {children}
              </BaseView>
            </TranslationsProvider>
          </StoreProvider>
        </StyleProvider>
      </body>
    </html>
  );
}
